//@author: vux
//@help: template for texture fx
//@tags: texture
//@credits: 

Texture2D texture2d : PREVIOUS;

float Amount = 1.0f;
float4x4 Transform;
float Power = 1.0f;

SamplerState linearSampler : IMMUTABLE
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Clamp;
    AddressV = Clamp;
};

struct psInput
{
	float4 p : SV_Position;
	float2 uv : TEXCOORD0;
};


float4 PS(psInput input) : SV_Target
{
	float2 x = (input.uv - 0.5f) * 2.0f;
	
	// apply sign
	float2 polarity = sign(x);
	x = pow(abs(x), Power) * polarity;
	
	
	float2 displacement = x;

	displacement *= Amount;
	
	float4 c = float4(0, 0, 0, 1);
	c.xy = displacement;
	c = mul(c, Transform);
	
	return c;
}

technique10 Process
{
	pass P0
	{
		SetPixelShader(CompileShader(ps_4_0,PS()));
	}
}



