//@author: vux
//@help: template for texture fx
//@tags: texture
//@credits: 

Texture2D texture2d : PREVIOUS;
float dx = 0.01f;
float Amplitude = 1.0f;

SamplerState linearSampler : IMMUTABLE
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Clamp;
    AddressV = Clamp;
};

struct psInput
{
	float4 p : SV_Position;
	float2 uv : TEXCOORD0;
};


float4 PS(psInput input) : SV_Target
{
	float left = texture2d.Sample(linearSampler,input.uv - float2(dx, 0.0f)).r;
	float right = texture2d.Sample(linearSampler,input.uv + float2(dx, 0.0f)).r;
	float up = texture2d.Sample(linearSampler,input.uv - float2(0.0f, dx)).r;
	float down = texture2d.Sample(linearSampler,input.uv + float2(0.0f, dx)).r;
	
	float4 c = float4((right - left) / dx, (up - down) / dx, 0.0f, 1.0f);
	
	c.rg *= Amplitude;
	
	return c;
}

technique10 Process
{
	pass P0
	{
		SetPixelShader(CompileShader(ps_4_0,PS()));
	}
}



